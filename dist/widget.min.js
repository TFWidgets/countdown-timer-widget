// dist/widget.min.js (готовый для браузера)
var defaultConfig = {
  target: null,
  autoStart: false,
  doneText: 'Completed',
  labels: {
    days: 'Days',
    hours: 'Hours',
    minutes: 'Minutes',
    seconds: 'Seconds'
  }
};

(function(window, document) {

  function CountdownWidget(element, options) {
    this.element = element;
    this.config = Object.assign({}, defaultConfig, options || {});
    this.timer = null;
    this.init();
  }

  CountdownWidget.prototype.init = function() {
    this.render();
    this.bindEvents();
    if (this.config.autoStart && this.config.target) {
      this.start();
    }
  };

  CountdownWidget.prototype.render = function() {
    this.element.innerHTML = '<div class="countdown-controls">' +
      '<input type="datetime-local" class="countdown-input">' +
      '<button class="countdown-button" data-action="set">Set Event</button>' +
      '</div>' +
      '<div class="countdown-widget">' +
      '<div class="countdown-digit"><div class="countdown-number" data-unit="days">00</div><div class="countdown-label">' + this.config.labels.days + '</div></div>' +
      '<div class="countdown-digit"><div class="countdown-number" data-unit="hours">00</div><div class="countdown-label">' + this.config.labels.hours + '</div></div>' +
      '<div class="countdown-digit"><div class="countdown-number" data-unit="minutes">00</div><div class="countdown-label">' + this.config.labels.minutes + '</div></div>' +
      '<div class="countdown-digit"><div class="countdown-number" data-unit="seconds">00</div><div class="countdown-label">' + this.config.labels.seconds + '</div></div>' +
      '</div>' +
      '<div class="countdown-title" style="text-align:center; margin-top:16px; font-weight:500;">' +
      (this.config.target ? 'Event is set' : 'Please set event date') +
      '</div>';
  };

  CountdownWidget.prototype.bindEvents = function() {
    var button = this.element.querySelector('[data-action="set"]');
    var input = this.element.querySelector('.countdown-input');
    var self = this;

    button.addEventListener('click', function() {
      var date = input.value;
      if (date) {
        self.setTarget(date);
        self.start();
      } else {
        alert('Please choose a date');
      }
    });
  };

  CountdownWidget.prototype.setTarget = function(target) {
    this.config.target = target;
    this.element.querySelector('.countdown-title').textContent = 'Event: ' + new Date(target).toLocaleString('en');
  };

  CountdownWidget.prototype.start = function() {
    var self = this;

    if (this.timer) clearInterval(this.timer);

    var targetTime = new Date(this.config.target).getTime();

    this.timer = setInterval(function() {
      var now = Date.now();
      var distance = targetTime - now;

      if (distance < 0) {
        self.complete();
        return;
      }

      var days = Math.floor(distance / (1000*60*60*24));
      var hours = Math.floor((distance % (1000*60*60*24)) / (1000*60*60));
      var minutes = Math.floor((distance % (1000*60*60)) / (1000*60));
      var seconds = Math.floor((distance % (1000*60)) / 1000);

      self.updateDisplay({days, hours, minutes, seconds});
    }, 1000);
  };

  CountdownWidget.prototype.updateDisplay = function(t) {
    function pad(n){return String(n).padStart(2,'0');}

    this.element.querySelector('[data-unit="days"]').textContent = pad(t.days);
    this.element.querySelector('[data-unit="hours"]').textContent = pad(t.hours);
    this.element.querySelector('[data-unit="minutes"]').textContent = pad(t.minutes);
    this.element.querySelector('[data-unit="seconds"]').textContent = pad(t.seconds);
  };

  CountdownWidget.prototype.complete = function() {
    clearInterval(this.timer);
    this.element.querySelector('.countdown-title').textContent = this.config.doneText || 'Completed';
    this.updateDisplay({days:0,hours:0,minutes:0,seconds:0});
  };

  CountdownWidget.prototype.destroy = function() {
    if (this.timer) clearInterval(this.timer);
  };

  function init(selector, options) {
    var elements = typeof selector === 'string' ? document.querySelectorAll(selector) : [selector];
    return Array.from(elements).map(function(el){return new CountdownWidget(el, options);});
  }

  document.addEventListener('DOMContentLoaded', function(){
    var elements = document.querySelectorAll('[data-widget="countdown"]');
    elements.forEach(function(el){
      var options = el.dataset.options ? JSON.parse(el.dataset.options) : {};
      new CountdownWidget(el, options);
    });
  });

  window.CountdownWidget = { CountdownWidget: CountdownWidget, init: init };

})(window, document);
